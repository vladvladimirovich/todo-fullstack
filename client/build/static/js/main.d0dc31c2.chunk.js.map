{"version":3,"sources":["components/DeleteButton.tsx","components/TodoItem.tsx","components/TodoState.tsx","store/TodosSlice.ts","store/Visibility.tsx","components/TodoList.tsx","components/TodoInput.tsx","store/VisibilitySlice.ts","components/TodoFilter.tsx","components/TodoCount.tsx","components/ToggleAll.tsx","components/App.tsx","store/Store.ts","index.tsx"],"names":["DeleteButton","props","className","onClick","TodoItem","TodoState","onToggle","type","checked","readOnly","children","e","onRemove","stopPropagation","URL","process","initialState","todoReducer","Visibility","state","action","map","todo","Completed","Planned","console","log","newState","concat","payload","filter","id","newTodo","Todos","todos","useSelector","dispatch","useDispatch","visibility","filteredTodos","All","todoState","a","fetch","method","response","json","ok","Array","from","getState","find","headers","body","JSON","stringify","name","TodoInput","useState","todoName","setTodoName","value","onChange","event","target","onKeyDown","key","newTodoName","trim","Date","getTime","toString","placeholder","autoFocus","visibilitySlice","createSlice","reducers","all","completed","planned","actions","TodoFilter","select","setSelect","setClass","href","TodoCounts","count","length","ToggleAll","setState","form","App","useEffect","err","fetchTodos","TodoList","TodoCount","rootReducer","combineReducers","visibilityReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0dc31c2.chunk.js","sourcesContent":["function DeleteButton(props: any) {\n  return <button className=\"destroy\" onClick={props.onClick}/>;\n}\n\nexport default DeleteButton;\n","import DeleteButton from \"./DeleteButton\";\n\nfunction TodoItem(props: any) {\n\n\n  return (\n    <li className={props.className} onClick={props.onToggle}>\n      <div className=\"view\">\n        <input className=\"toggle\" type=\"checkbox\" checked={props.checked} readOnly/>\n        <label>{props.children}</label>\n        <DeleteButton\n          onClick={(e: any) => {\n            props.onRemove();\n            e.stopPropagation();\n          }}\n        />\n      </div>\n    </li>\n  );\n}\n\nexport default TodoItem;\n","enum TodoState {\n  Planned,\n  Completed,\n}\n\nexport default TodoState;\n","import ITodo from \"../components/ITodo\";\nimport Todos from \"../components/TodoList\";\nimport TodoState from \"../components/TodoState\";\n\nconst URL = process.env.PUBLIC_URL;\n\nconst initialState: any = [];\n\n//todo: custom middleware\n\n//REDUCERS\nfunction todoReducer(state = initialState, action: any) {\n  const type = action.type;\n  switch (type) {\n    case \"todo/markAll\": {\n      return state.map((todo: ITodo) => {\n        todo.state = TodoState.Completed;\n        return todo;\n      });\n    }\n    case \"todo/unmarkAll\": {\n      return state.map((todo: ITodo) => {\n        todo.state = TodoState.Planned;\n        return todo;\n      });\n    }\n    case \"todo/add\": {\n      console.log(URL);\n      const newState = state.concat(action.payload);\n      return newState;\n    }\n    case \"todo/remove\": {\n      return state.filter((todo: ITodo) => action.payload !== todo.id);\n    }\n    case \"todo/toggle\": {\n      const id = action.payload.id;\n      const newState = action.payload.state;\n      return state.map((todo: ITodo) => {\n        const newTodo = { ...todo };\n        if (id === todo.id) {\n          newTodo.state = newState;\n        }\n        return newTodo;\n      });\n    }\n    case \"todo/fetchTodos\": {\n      return [...action.payload];\n    }\n    default:\n      return state;\n  }\n}\n\n//ADD TODO ITEM\nfunction add(todo: ITodo) {\n  return async function (dispatch: any) {\n    try {\n      const response = await fetch(URL + \"api/v1/todos\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\",\n        },\n        body: JSON.stringify(todo),\n      });\n\n      const newTodo = await response.json();\n\n      if (response.ok) {\n        dispatch({\n          type: \"todo/add\",\n          payload: newTodo,\n        });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}\n\n//REMOVE TODO ITEM BY ID\nfunction remove(id: String) {\n  return async function (dispatch: any) {\n    try {\n      const response = await fetch(URL + \"api/v1/todos/\" + id, {\n        method: \"DELETE\",\n      });\n\n      const todos = await response.json();\n\n      if (response.ok) {\n        dispatch({ type: \"todo/fetchTodos\", payload: Array.from(todos) });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}\n\n//TOGGLE TODO ITEM BY ID\nfunction toggle(id: String) {\n  return async function (dispatch: any, getState: any) {\n    const todos = getState().todos;\n    const state = todos.find((todo: ITodo) => todo.id === id).state;\n\n    const newState = state === TodoState.Completed ? 0 : 1;\n    try {\n      const response = await fetch(URL + \"api/v1/todos/\" + id, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\",\n        },\n        body: JSON.stringify({ state: newState }),\n      });\n\n      if (response.ok) {\n        dispatch({ type: \"todo/toggle\", payload: { id: id, state: newState } });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}\n\n//MARK ALL ITEMS\nfunction markAll() {\n  return async function (dispatch: any) {\n    const state = { state: 1 };\n    try {\n      const response = await fetch(URL + \"api/v1/todos/\", {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\",\n        },\n        body: JSON.stringify(state),\n      });\n      if (response.ok) {\n        dispatch({ type: \"todo/markAll\" });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}\n\n//UNMARK ALL ITEMS\nfunction unmarkAll() {\n  return async function (dispatch: any) {\n    const state = { state: 0 };\n    try {\n      const response = await fetch(URL + \"api/v1/todos/\", {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\",\n        },\n        body: JSON.stringify(state),\n      });\n      if (response.ok) {\n        dispatch({ type: \"todo/unmarkAll\" });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}\n\n//GET TODO ITEMS FROM THE SERVER\nfunction fetchTodos() {\n  try {\n    return async function (dispatch: any) {\n      const response = await fetch(URL + \"api/v1/todos\");\n      const todos = await response.json();\n      if (response.ok) {\n        dispatch({ type: \"todo/fetchTodos\", payload: Array.from(todos) });\n      }\n    };\n  } catch (err) {\n    console.log();\n  }\n}\n\nexport { fetchTodos, add, remove, toggle, markAll, unmarkAll };\n\nexport default todoReducer;\n","enum Visibility {\n    All,\n    Completed,\n    Planned\n}\n\nexport default Visibility;","import { useSelector, useDispatch } from \"react-redux\";\nimport TodoItem from \"./TodoItem\";\nimport ITodo from \"./ITodo\";\nimport TodoState from \"./TodoState\";\nimport { remove, toggle } from \"../store/TodosSlice\";\nimport Visibility from \"../store/Visibility\";\nimport \"../css/index.css\";\n\nfunction Todos(props: any) {\n  const todos = useSelector((state: any) => state.todos);\n  const dispatch = useDispatch();\n  const visibility = useSelector((state: any) => state.visibility);\n\n  const filteredTodos = todos.filter((todo: ITodo) => {\n    if (\n      visibility === Visibility.Completed &&\n      todo.state === TodoState.Completed\n    ) {\n      return true;\n    }\n    if (visibility === Visibility.Planned && todo.state === TodoState.Planned) {\n      return true;\n    }\n    if (visibility === Visibility.All) {\n      return true;\n    }\n    return false;\n  });\n\n\n  return (\n    <ul className=\"todo-list\">\n      {filteredTodos.map((todo: ITodo) => (\n        <TodoItem\n          todoState={todo.state}\n          key={todo.id}\n          onRemove={() => dispatch(remove(todo.id))}\n          onToggle={() => dispatch(toggle(todo.id))}\n          className={\n            todo.state === TodoState.Completed ? \"completed\" : \"editing\"\n          }\n          checked={todo.state === TodoState.Completed ? true : false}\n        >\n          {todo.name}\n        </TodoItem>\n      ))}\n    </ul>\n  );\n}\n\nexport default Todos;\n","import { useState } from \"react\";\nimport TodoState from \"../components/TodoState\";\nimport { useDispatch } from \"react-redux\";\nimport { add } from \"../store/TodosSlice\";\n\nfunction getId() {\n  return new Date().getTime().toString();\n}\n\nfunction TodoInput() {\n  const [todoName, setTodoName] = useState(\"\");\n  const dispatch = useDispatch();\n  const onInputChange = (event: any) => {\n    setTodoName(event.target.value);\n  };\n\n  const clearTextInput = () => {\n    setTodoName(\"\");\n  };\n\n  return (\n    <input\n      className=\"new-todo\"\n      value={todoName}\n      onChange={onInputChange}\n      onKeyDown={(event: any) => {\n        if (event.key === \"Enter\") {\n          const newTodoName = todoName.trim();\n          if (newTodoName !== \"\") {\n            dispatch(\n              add({ id: getId(), name: newTodoName, state: TodoState.Planned })\n            );\n            clearTextInput();\n          }\n        }\n      }}\n      placeholder=\"Type here\"\n      type=\"text\"\n      autoFocus\n    />\n  );\n}\n\nexport default TodoInput;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport Visibility from \"./Visibility\";\n\nconst initialState = Visibility.All;\n\nconst visibilitySlice = createSlice({\n  name: \"todo\",\n  initialState,\n  reducers: {\n    all: (state) => {\n      return Visibility.All;\n    },\n    completed: (state) => {\n      return Visibility.Completed;\n    },\n    planned: (state) => {\n      return Visibility.Planned;\n    }\n  },\n});\n\nexport const { all, completed, planned } = visibilitySlice.actions;\n\nexport default visibilitySlice.reducer;\n","import { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { all, planned, completed } from \"../store/VisibilitySlice\";\n\nfunction TodoFilter() {\n  const [select, setSelect] = useState(0);\n  const dispatch = useDispatch();\n\n  const setClass = (id: number) => {\n    if (id === select) {\n      return \"selected\";\n    }\n    return \"\";\n  }\n\n  return (\n    <ul className=\"filters\">\n      <li\n        onClick={() => {\n          dispatch(all());\n          setSelect(0);\n        }}\n      >\n        <a className={setClass(0)} href=\"#/\">\n          All\n        </a>\n      </li>\n      <li\n        onClick={() => {\n          dispatch(planned());\n          setSelect(1);\n        }}\n      >\n        <a className={setClass(1)} href=\"#/active\">Active</a>\n      </li>\n      <li\n        onClick={() => {\n          dispatch(completed());\n          setSelect(2);\n        }}\n      >\n        <a className={setClass(2)} href=\"#/completed\">Completed</a>\n      </li>\n    </ul>\n  );\n}\n\nexport default TodoFilter;\n","import {useSelector} from 'react-redux';\n\nfunction TodoCounts() {\n\n    const count = (useSelector((state: any) => state.todos.length));\n\n  return (\n    <span className=\"todo-count\">\n      <strong>{count}</strong> item left\n    </span>\n  );\n}\n\nexport default TodoCounts;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { markAll, unmarkAll } from \"../store/TodosSlice\";\n\nfunction ToggleAll() {\n    const dispatch = useDispatch();\n    const [state, setState] = useState(false);\n\n\n  const toggler = () => {\n    if (state === true) {\n      dispatch(unmarkAll());\n      setState(false);\n    } else {\n      dispatch(markAll());\n      setState(true);\n    }\n  };\n\n  return (\n    <>\n      <input\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        type=\"checkbox\"\n      />\n      <label onClick={toggler} form=\"toggle-all\">Mark all as complete</label>\n    </>\n  );\n}\n\nexport default ToggleAll;\n","import TodoList from \"./TodoList\";\nimport TodoInput from \"./TodoInput\";\nimport TodoFilter from \"./TodoFilter\";\nimport TodoCounts from \"./TodoCount\";\nimport ToggleAll from \"./ToggleAll\";\nimport { fetchTodos } from \"../store/TodosSlice\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTodos());\n  }, [dispatch]);\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>Todos</h1>\n        <TodoInput />\n      </header>\n\n      <section className=\"main\">\n        <ToggleAll />\n        <TodoList />\n      </section>\n\n      <footer className=\"footer\">\n        <TodoFilter></TodoFilter>\n        <TodoCounts></TodoCounts>\n      </footer>\n    </section>\n  );\n}\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from \"@reduxjs/toolkit\";\nimport todoReducer from \"./TodosSlice\";\nimport visibilityReducer from \"./VisibilitySlice\";\nimport thunk from \"redux-thunk\";\n\nconst rootReducer = combineReducers({todos: todoReducer,visibility: visibilityReducer,});\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./css/index.css\";\nimport App from \"./components/App\";\nimport store from './store/Store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}